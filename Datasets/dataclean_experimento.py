# -*- coding: utf-8 -*-
"""DataClean_Experimento.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A9Pjemy7HMsvYXszouhGPOOfqlzwA1qD

Limpieza de datos
"""

import pandas as pd


df = pd.ExcelFile("../Dataset/AnonymisezData_oulad_context-Kongo-2024.xlsx")
print(df.sheet_names)

# DataFrames
df_assess_detail = pd.read_excel(df, 'Assesss_detail')
df_assess_plan = pd.read_excel(df, 'Assess Plan')
df_vle_click = pd.read_excel(df, 'VLE_clickStream')
df_cursos = pd.read_excel(df, 'cursos')
df_studentinfo = pd.read_excel(df, 'StudentInfo')
df_vle_modules = pd.read_excel(df, 'Vle_modules')
df_registration = pd.read_excel(df, 'Registration')

# Ver primeras filas de cada DataFrame
print("\nStudentInfo:")
print(df_studentinfo.head())

print("\nRegistration:")
print(df_registration.head())

print("\nVLE_clickStream:")
print(df_vle_click.head())

# Revisar tipos de datos y missing en StudentInfo
print("\nINFO StudentInfo:")
print(df_studentinfo.info())

print("\nValores null por columna StudentInfo:")
print(df_studentinfo.isnull().sum())

# Porcentajes de missing
missing_percent = df_studentinfo.isnull().mean() * 100
print("\nPorcentaje de missing por columna StudentInfo:")
print(missing_percent[missing_percent > 0].sort_values(ascending=False))

# ------- IMPUTACIÓN DE MISSING VALUES -------- #

# Imputar numéricos con la mediana
if 'age_band' in df_studentinfo.columns:
    # Reemplazar missing por 'Unknown'
    df_studentinfo['age_band'] = df_studentinfo['age_band'].fillna('Unknown')

if 'num_of_prev_attempts' in df_studentinfo.columns:
    df_studentinfo['num_of_prev_attempts'] = df_studentinfo['num_of_prev_attempts'].fillna(
        df_studentinfo['num_of_prev_attempts'].median()
    )

# Imputar género si existe
if 'gender' in df_studentinfo.columns:
    df_studentinfo['gender'] = df_studentinfo['gender'].fillna('Unknown')

# ------- ENCODING DE VARIABLES CATEGÓRICAS -------- #

# Mapear ordinales: education_level
if 'highest_education' in df_studentinfo.columns:
    edu_map = {
        'No Formal quals': 0,
        'Lower Than A Level': 1,
        'A Level or Equivalent': 2,
        'HE Qualification': 3,
        'Post Graduate Qualification': 4
    }
    df_studentinfo['highest_education_code'] = df_studentinfo['highest_education'].map(edu_map)

# One-hot encoding para region
if 'region' in df_studentinfo.columns:
    df_studentinfo = pd.get_dummies(df_studentinfo, columns=['region'], drop_first=True)

# ------- RESULTADO -------- #
print("\nINFO después de imputación y encoding:")
print(df_studentinfo.info())

print("\nMissing values restantes:")
print(df_studentinfo.isnull().sum())

# -------------------------------
# LIMPIEZA Registration
# -------------------------------
print("\nLIMPIEZA Registration")

if 'date_registration' in df_registration.columns:
    df_registration['date_registration'] = df_registration['date_registration'].fillna(
        df_registration['date_registration'].median()
    )

if 'date_unregistration' in df_registration.columns:
    df_registration['date_unregistration'] = df_registration['date_unregistration'].fillna(-1)

# Exportar
df_registration.to_csv('Registration_cleaned.csv', index=False)
print("✅ Registration_cleaned.csv guardado")

# -------------------------------
# LIMPIEZA VLE_clickStream
# -------------------------------
print("\nLIMPIEZA VLE_clickStream")

if 'click' in df_vle_click.columns:
    df_vle_click['click'] = df_vle_click['click'].fillna(0)

# Exportar
df_vle_click.to_csv('VLE_clickStream_cleaned.csv', index=False)
print("✅ VLE_clickStream_cleaned.csv guardado")

# Exportar
df_studentinfo.to_csv('StudentInfo_cleaned.csv', index=False)
print("✅ StudentInfo_cleaned.csv guardado")

from google.colab import files

# Unir: Registration + StudentInfo
df_merged = pd.merge(df_registration, df_studentinfo, left_on='guid_studente_id', right_on='guid_student_id', how='left')

# Unir VLE_clickStream (si quieres sumar los clicks por estudiante)
df_vle_agg = df_vle_click.groupby(['guid_student_id', 'modulo', 'presentation'])['sum_clics'].sum().reset_index()
df_final = pd.merge(df_merged, df_vle_agg, left_on=['guid_studente_id', 'code_module_x', 'code_presentation_x'], right_on=['guid_student_id', 'modulo', 'presentation'], how='left')


# Llenar clicks faltantes (estudiantes sin registros de click) con 0
df_final['sum_clics'] = df_final['sum_clics'].fillna(0)

# Guardar dataset final
df_final.to_csv('OULAD_Experiment_cleaned.csv', index=False)
print("✅ OULAD_Experiment_cleaned.csv guardado con éxito.")

# Descargar
files.download('OULAD_Experiment_cleaned.csv')